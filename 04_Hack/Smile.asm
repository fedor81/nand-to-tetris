// Smile:
// В двоичной       - В десятичной
// 0001110000111000 - 7224
// 0001110000111000 - 7224
// 0001110000111000 - 7224
// 0000000000000000 - 0
// 0000000000000000 - 0
// 0110000000000110 - 24582
// 0011100000011100 - 14364
// 0000111111110000 - 4080

// Сейчас регистр R0 = top*32 + left
// Ячейка в памяти: @SCREEN + R0 + номер строки * 32


(START)
    // address = screen + top + left
    @SCREEN
    D = A
    @address
    M = D
    @R0
    D = M
    @address
    M = M + D
    

// Начало отрисовки
// Отрисовка будет происходить по адресу DRAWING

(DRAW1)
    // Устанавливаем адресс возврата
    @DRAW2
    D = A
    @R1
    M = D
    // Рисуем
    @7224
    D = A
    @DRAWING
    0; JMP

(DRAW2)
    // Устанавливаем адресс возврата
    @DRAW3
    D = A
    @R1
    M = D
    // Рисуем
    @7224
    D = A
    @DRAWING
    0; JMP

(DRAW3)
    // Устанавливаем адресс возврата
    @DRAW4
    D = A
    @R1
    M = D
    // Рисуем
    @7224
    D = A
    @DRAWING
    0; JMP

(DRAW4)
    // Устанавливаем адресс возврата
    @DRAW5
    D = A
    @R1
    M = D
    // Рисуем
    @0
    D = A
    @DRAWING
    0; JMP

(DRAW5)
    // Устанавливаем адресс возврата
    @DRAW6
    D = A
    @R1
    M = D
    // Рисуем
    @0
    D = A
    @DRAWING
    0; JMP

(DRAW6)
    // Устанавливаем адресс возврата
    @DRAW7
    D = A
    @R1
    M = D
    // Рисуем
    @24582
    D = A
    @DRAWING
    0; JMP

(DRAW7)
    // Устанавливаем адресс возврата
    @DRAW8
    D = A
    @R1
    M = D
    // Рисуем
    @14364
    D = A
    @DRAWING
    0; JMP

(DRAW8)
    // Устанавливаем адресс возврата
    @END
    D = A
    @R1
    M = D
    // Рисуем
    @4080
    D = A
    @DRAWING
    0; JMP

@END
0; JMP

(DRAWING)
    @address
    A = M
    M = D   // Записали в ячейку строку пикселей
    // Увеличиваем address на 32 для перехода на следующую строку
    @address
    D = M
    @32
    D = D + A
    @address
    M = D
    // Возвращаемся по адресу из R1
    @R1
    A = M
    0; JMP

(END)
    @END
    0; JMP